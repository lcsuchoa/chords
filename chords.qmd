---
title: "chords"
format: html
editor: visual
---

```{r echo=F}
# devtools::install_github("r-music/chorrrds")
require(chorrrds)
require(tidyverse)
require(rvest)
require(ggridges)
source("utils.R")
```

# Leitura dos dados

```{r}
rock <- data.frame(
  song = html_attr(html_nodes(read_html(
  "https://www.cifraclub.com.br/mais-acessadas/rock/"), "a"), "href")[30:119],
  gender = "rock",
  ranking = 1:90
)

gospel <- data.frame(
  song = html_attr(html_nodes(read_html(
  "https://www.cifraclub.com.br/mais-acessadas/gospelreligioso/"), "a"), "href")[30:119],
  gender = "gospel",
  ranking = 1:90
)

sertanejo <- data.frame(
  song = html_attr(html_nodes(read_html(
  "https://www.cifraclub.com.br/mais-acessadas/sertanejo/"), "a"), "href")[30:119],
  gender = "sertanejo",
  ranking = 1:90
)

mpb <- data.frame(
  song = html_attr(html_nodes(read_html(
  "https://www.cifraclub.com.br/mais-acessadas/mpb/"), "a"), "href")[30:119],
  gender = "mpb",
  ranking = 1:90
)

geral <- rbind(rock, gospel, sertanejo, mpb) %>%
  rename(url = song)
```

```{r}
chords <- geral$url %>%
  map(get_chords) %>%
  map_dfr(mutate_if, is.factor, as.character) %>%
  clean(message = F) %>%
  mutate(chord = case_when( 
    chord == "Bb" ~ "A#",
    chord == "Ab" ~ "G#",
    chord == "Gb" ~ "F#",
    chord == "Eb" ~ "D#",
    chord == "Db" ~ "C#",
    chord == "Fb" ~ "E",
    chord == "Cb" ~ "B",
    chord == "E#" ~ "F",
    chord == "B#" ~ "C",
    TRUE ~ chord
  )
)
```

```{r}
geral$artist <- sub("^/(.*?)/.*$", "\\1", geral$url)
geral$artist <- gsub("-", " ", geral$artist)
geral$artist <- gsub("(^|\\s)([a-z])", "\\1\\U\\2", geral$artist, perl=T)

geral$song <- sub("^/.*?/(.*)/$", "\\1", geral$url)
geral$song <- gsub("-", " ", geral$song)
geral$song <- gsub("(^|\\s)([a-z])", "\\1\\U\\2", geral$song, perl=T)
```

```{r}
write.csv(geral, "top_musicas_150623.csv")
```

# Análise exploratória por música

#### Top 20 músicas com mais acordes distintos

```{r}
chords %>% 
  group_by(song, chord) %>% 
  summarise(distintos = n_distinct(chord)) %>% 
  summarise(cont = n()) %>% 
  mutate(song = fct_reorder(song, cont)) %>% 
  top_n(n = 20) %>% 
  ggplot(aes(y = cont, x = song)) +
  geom_bar(colour = 'dodgerblue4', fill = 'darksalmon',
           size = 0.5, alpha = 0.6, stat = "identity") +
  labs(x = 'Songs', y = 'Counts') +
  coord_flip() +
  theme_bw(14)
```

#### Top 3 acordes mais frequentes por música

```{r}
chords %>% 
  group_by(song) %>% 
  count(chord) %>%
  mutate(prop = scales::percent(n/sum(n))) %>%
  top_n(n, n = 3)
```

#### Top 2 transições mais frequentes por música

```{r}
chords %>%
  split(.$song) %>% 
  map(chords_ngram, n = 2) %>% 
  bind_rows() %>% 
  group_by(song) %>% 
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

#### Densidade de extracted features

```{r}
feat_chords <- chords %>%
  select(chord, song) %>% 
  chorrrds::feature_extraction() %>% 
  select(-chord) %>% 
  group_by(song) %>% 
  summarise_all(mean)

dt <- feat_chords %>% 
  gather(group, vars, minor, seventh, 
                seventh_M, sixth, fifth_dim, fifth_aug, 
                fourth, ninth, bass, dimi, augm)

dt$group <- forcats::lvls_revalue(
  dt$group,
  c("Augmented", "Bass", "Diminished",
    "Augm. Fifth", "Dimi. Fifth",
    "Fourth", "Minor", "Ninth", "Seventh",
    "Major Seventh", "Sixth"))

dt %>% 
  ggplot(aes(vars, group, fill = group)) +
  geom_density_ridges(alpha = 0.6) +
  scale_fill_cyclical(values = c("dodgerblue4", "darksalmon")) +
  guides(fill = FALSE) +
  xlim(0, 1) +
  labs(x = "Densities", y = "extracted features") +
  theme_bw(14)
```

# Análise exploratória por gênero

## Sem padronização

#### Quantidade de acordes distintos por gênero

```{r}
aux <- chords %>% 
  group_by(song, chord) %>% 
  summarise(distintos = n_distinct(chord)) %>% 
  summarise(cont = n()) %>% 
  mutate(song = fct_reorder(song, cont))

left_join(aux, geral, by="song") %>%
  group_by(gender) %>%
  summarise(cont = round(mean(cont), 2)) %>%
  ggplot(aes(y = cont, reorder(gender, -cont, decreasing=T))) +
  geom_bar(colour = 'dodgerblue4', fill = 'darksalmon',
           size = 0.5, alpha = 0.6, stat = "identity") +
  labs(x = 'Genders', y = 'Counts') +
  coord_flip() +
  theme_bw(14)
```

#### Top 5 acordes mais frequentes por gênero

```{r}
aux <- chords %>%
  group_by(song) %>% 
  count(chord)

left_join(aux, geral, by="song") %>%
  group_by(gender) %>%
  count(chord) %>%
  mutate(prop = scales::percent(n/sum(n))) %>%
  top_n(n, n = 5)
```

#### Top 2 transições mais frequentes por gênero

```{r}
aux <- chords %>%
  split(.$song) %>% 
  map(chords_ngram, n = 2) %>% 
  bind_rows() %>% 
  group_by(song)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

## Com padronização


