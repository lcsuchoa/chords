---
title: "chords"
format: html
editor: visual
---

```{r echo=F}
# devtools::install_github("r-music/chorrrds")
require(chorrrds)
require(tidyverse)
require(rvest)
require(ggridges)
require(tictoc)
source("utils.R")
```

# Leitura dos dados

```{r}
generos <- c("rock", "gospelreligioso", "sertanejo", "mpb", "alternativo",
             "axé", "funk")
# "pop", "poprock", "samba"

geral <- generos %>%
  purrr::map(~{
    .x %>% 
      paste0("https://www.cifraclub.com.br/mais-acessadas/", .) %>% 
      read_html() %>% 
      html_nodes("a") %>%
      html_attr("href") %>% 
      .[30:119] %>%
      cbind.data.frame(url = ., 
                       gender = .x,
                       ranking = 1:90)
  }) %>%
  purrr::reduce(rbind) %>%
  mutate(gender = gsub("gospelreligioso", "gospel", gender))

geral$artist <- sub("^/(.*?)/.*$", "\\1", geral$url) %>%
  gsub("-", " ", .) %>%
  gsub("(^|\\s)([a-z])", "\\1\\U\\2", ., perl=T)

geral$song <- sub("^/.*?/(.*)/$", "\\1", geral$url) %>%
  gsub("-", " ", .) %>%
  gsub("(^|\\s)([a-z])", "\\1\\U\\2", ., perl=T)
```

```{r}
# write.csv(geral, "top_musicas_160623.csv")
```

```{r}
# esse chunk demora bastante para rodar
tic()
chords <- read_chords(geral)
toc()
```

# Análise exploratória por música

#### Top 20 músicas com mais acordes distintos

```{r}
chords %>% 
  group_by(song, chord) %>% 
  summarise(distintos = n_distinct(chord)) %>% 
  summarise(cont = n()) %>% 
  mutate(song = fct_reorder(song, cont)) %>% 
  top_n(n = 20) %>% 
  ggplot(aes(y = cont, x = song)) +
  geom_bar(colour = 'dodgerblue4', fill = 'darksalmon',
           size = 0.5, alpha = 0.6, stat = "identity") +
  labs(x = 'Songs', y = 'Counts') +
  coord_flip() +
  theme_bw(14)
```

#### Top 3 acordes mais frequentes por música

```{r}
chords %>% 
  group_by(song) %>% 
  count(chord) %>%
  mutate(prop = scales::percent(n/sum(n))) %>%
  top_n(n, n = 3)
```

#### Top 2 transições mais frequentes por música

```{r}
chords %>%
  split(.$song) %>% 
  map(chords_ngram, n = 2) %>% 
  bind_rows() %>% 
  group_by(song) %>% 
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

#### Densidade de extracted features

```{r}
feat_chords <- chords %>%
  select(chord, song) %>% 
  feature_extraction() %>% 
  select(-chord) %>% 
  group_by(song) %>% 
  summarise_all(mean)

dt <- feat_chords %>% 
  gather(group, vars, minor, seventh, 
         seventh_M, sixth, fifth_dim, fifth_aug, 
         fourth, ninth, bass, dimi, augm)

dt$group <- forcats::lvls_revalue(
  dt$group,
  c("Augmented", "Bass", "Diminished",
    "Augm. Fifth", "Dimi. Fifth",
    "Fourth", "Minor", "Ninth", "Seventh",
    "Major Seventh", "Sixth"))

dt %>% 
  ggplot(aes(vars, group, fill = group)) +
  geom_density_ridges(alpha = 0.6) +
  scale_fill_cyclical(values = c("dodgerblue4", "darksalmon")) +
  guides(fill = FALSE) +
  xlim(0, 1) +
  labs(x = "Densities", y = "extracted features") +
  theme_bw(14)
```

# Análise exploratória por gênero

## Sem padronização de tom

#### Quantidade de acordes distintos por gênero

```{r}
aux <- chords %>% 
  group_by(song, chord) %>% 
  summarise(distintos = n_distinct(chord)) %>% 
  summarise(cont = n()) %>% 
  mutate(song = fct_reorder(song, cont))

left_join(aux, geral, by="song") %>%
  group_by(gender) %>%
  na.omit() %>%
  summarise(cont = round(mean(cont), 2)) %>%
  ggplot(aes(y = cont, reorder(gender, -cont, decreasing=T))) +
  geom_bar(colour = 'dodgerblue4', fill = 'darksalmon',
           size = 0.5, alpha = 0.6, stat = "identity") +
  labs(x = 'Genders', y = 'Counts') +
  coord_flip() +
  theme_bw(14)
```

#### Top 5 acordes mais frequentes por gênero

```{r}
aux <- chords %>%
  group_by(song) %>% 
  count(chord)

left_join(aux, geral, by="song") %>%
  group_by(gender) %>%
  na.omit() %>%
  count(chord) %>%
  mutate(prop = scales::percent(n/sum(n))) %>%
  top_n(n, n = 5)
```

#### Top 2 transições mais frequentes por gênero

```{r}
aux <- chords %>%
  split(.$song) %>% 
  map(chords_ngram, n = 2) %>% 
  bind_rows() %>% 
  group_by(song)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

#### Top 2 progressões mais frequentes por gênero

```{r}
aux <- chords %>%
  split(.$song) %>% 
  map(chords_ngram, n = 4) %>% 
  bind_rows() %>% 
  group_by(song)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

#### Top 2 tonalidades mais frequentes por gênero

```{r}
aux <- chords %>%
  group_by(song) %>%
  count(key)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  count(key) %>% 
  top_n(n, n = 2)
```

#### Proporção de acordes maiores e menores por gênero

```{r}
aux <- chords %>%
  select(chord, song) %>% 
  feature_extraction() %>% 
  select(-chord) %>% 
  group_by(song) %>% 
  summarise_all(mean)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  summarise(minor = round(mean(minor), 2)) %>%
  mutate(major = 1 - minor) %>%
  arrange(desc(minor))
```

#### Proporção de acordes simples e complexos por gênero

```{r}
aux <- chords %>%
  select(chord, song) %>% 
  feature_extraction() %>% 
  select(-chord) %>% 
  group_by(song) %>% 
  summarise_all(mean) %>%
  mutate(complex = dimi + augm + sus + seventh + seventh_M + sixth + fourth +
           sixth + fourth + fifth_aug + fifth_dim + ninth + bass)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  summarise(complex = round(mean(complex), 2)) %>%
  mutate(simple = 1 - complex) %>%
  arrange(desc(complex))
```

## Com padronização de tom

```{r}
chordsC <- chords %>%
  mutate(chord = transpose_chords(chords, "C")) %>%
  mutate(key = ifelse(nchar(key) == 1, "C", "Am"), key)
```

#### Quantidade de acordes distintos por gênero

```{r}
aux <- chordsC %>% 
  group_by(song, chord) %>% 
  summarise(distintos = n_distinct(chord)) %>% 
  summarise(cont = n()) %>% 
  mutate(song = fct_reorder(song, cont))

left_join(aux, geral, by="song") %>%
  group_by(gender) %>%
  na.omit() %>%
  summarise(cont = round(mean(cont), 2)) %>%
  ggplot(aes(y = cont, reorder(gender, -cont, decreasing=T))) +
  geom_bar(colour = 'dodgerblue4', fill = 'darksalmon',
           size = 0.5, alpha = 0.6, stat = "identity") +
  labs(x = 'Genders', y = 'Counts') +
  coord_flip() +
  theme_bw(14)
```

#### Top 5 acordes mais frequentes por gênero

```{r}
aux <- chordsC %>%
  group_by(song) %>% 
  count(chord)

left_join(aux, geral, by="song") %>%
  group_by(gender) %>%
  na.omit() %>%
  count(chord) %>%
  mutate(prop = scales::percent(n/sum(n))) %>%
  top_n(n, n = 5)
```

#### [WIP] Top 2 transições mais frequentes por gênero

```{r}
aux <- chordsC %>%
  split(.$song) %>% 
  map(chords_ngram, n = 2) %>% 
  bind_rows() %>% 
  group_by(song)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

#### [WIP] Top 2 progressões mais frequentes por gênero

```{r}
aux <- chordsC %>%
  split(.$song) %>% 
  map(chords_ngram, n = 4) %>% 
  bind_rows() %>% 
  group_by(song)

left_join(aux, geral, by="song") %>% 
  group_by(gender) %>%
  na.omit() %>%
  count(chords_ngram) %>% 
  top_n(n, n = 2)
```

